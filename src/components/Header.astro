---
// src/components/Header.astro

const navLinks = [
	{ href: '#about', label: 'About' },
	{ href: '#experience', label: 'Experience' },
	{ href: '#education', label: 'Education' },
	{ href: '#skills', label: 'Skills' },
	{ href: '#projects', label: 'Projects' },
	{ href: '#contact', label: 'Contact' },
];
---

<header id="main-header">
	<nav>
		<span class="logo-link">Dane Gibson</span>
		<button id="menu-toggle" aria-label="Toggle Menu" aria-expanded="false">
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="icon-menu">
				<path d="M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z"></path>
			</svg>
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="icon-close">
				<path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path>
			</svg>
		</button>
		<ul id="nav-list">
			{
				navLinks.map((link) => (
					<li>
						<a href={link.href}>{link.label}</a>
					</li>
				))
			}
		</ul>
	</nav>
</header>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const header = document.getElementById('main-header');
		const sections = document.querySelectorAll<HTMLElement>('section[id]');

		if (!header || sections.length === 0) {
			console.error('Header or sections not found for sticky navigation.');
			return;
		}

		const menuToggle = document.getElementById('menu-toggle');
		const navList = document.getElementById('nav-list');

		if (!menuToggle || !navList) {
			console.error('Menu toggle or nav list not found.');
			return;
		}

		const navLinks = navList.querySelectorAll<HTMLAnchorElement>('a');
		let isMenuOpen = false;
		let currentActiveSectionId: string | null = null;

		menuToggle.addEventListener('click', () => {
			isMenuOpen = !isMenuOpen;
			navList.classList.toggle('is-open', isMenuOpen);
			menuToggle.setAttribute('aria-expanded', isMenuOpen.toString());
		});

		const handleScroll = () => {
			if (!header) return;
			if (window.scrollY > 10) {
				header.classList.add('scrolled');
			} else {
				header.classList.remove('scrolled');
			}
		};
		window.addEventListener('scroll', handleScroll);
		handleScroll();

		const updateActiveLink = () => {
            if (!header) return;
			const headerHeight = header.offsetHeight;
            const scrollTriggerPoint = window.scrollY + headerHeight + 20;

            let newActiveSectionId: string | null = null;

            sections.forEach((section) => {
                if (section.offsetTop <= scrollTriggerPoint) {
                    newActiveSectionId = section.id;
                }
            });

            if (window.scrollY < headerHeight * 2 && newActiveSectionId !== 'hero') {
                 newActiveSectionId = 'hero';
            }
            else if ((window.innerHeight + Math.ceil(window.scrollY)) >= document.body.offsetHeight - 5) { // 5px buffer from bottom
                if (sections.length > 0) {
                    newActiveSectionId = sections[sections.length - 1].id;
                }
            }

            if (newActiveSectionId !== currentActiveSectionId) {
                currentActiveSectionId = newActiveSectionId;

                navLinks.forEach((link) => {
                    const linkHrefId = link.getAttribute('href')?.substring(1);
                    if (linkHrefId === currentActiveSectionId) {
                        link.classList.add('active');
                    } else {
                        link.classList.remove('active');
                    }
                });
            }
		};

        let scrollTimeout: number | undefined;
        window.addEventListener('scroll', () => {
            clearTimeout(scrollTimeout);
            scrollTimeout = window.setTimeout(updateActiveLink, 50);
        }, { passive: true });

        setTimeout(updateActiveLink, 150);

        navLinks.forEach(link => {
            link.addEventListener('click', (event) => {
                event.preventDefault();

                const href = link.getAttribute('href');
                if (!href || !href.startsWith('#') || href.length === 1) return;
                const targetId = href.substring(1);
                const targetElement = document.getElementById(targetId);

                if (targetElement) {
                    targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });

                    currentActiveSectionId = targetId;
                     navLinks.forEach((lnk) => {
                        const linkHrefId = lnk.getAttribute('href')?.substring(1);
                        if (linkHrefId === currentActiveSectionId) {
                            lnk.classList.add('active');
                        } else {
                            lnk.classList.remove('active');
                        }
                    });
                }

                if (isMenuOpen) {
                    isMenuOpen = false;
                    navList.classList.remove('is-open');
                    menuToggle.setAttribute('aria-expanded', 'false');
                }
            });
        });

	});
</script>


<style>
	#main-header {
		position: sticky;
		top: 0;
		left: 0;
		width: 100%;
		height: var(--header-height);
		z-index: 1000;
		background-color: transparent;
		backdrop-filter: blur(5px);
		transition:
			background-color 0.3s ease,
			box-shadow 0.3s ease;
		display: flex;
		justify-content: center;
		padding: 0 var(--section-padding-x);
	}

	#main-header.scrolled {
		background-color: var(--background-header);
		box-shadow: 0 2px 10px var(--header-shadow);
	}

	nav {
		display: flex;
		justify-content: space-between;
		align-items: center;
		width: 100%;
		max-width: calc(
			var(--section-max-width) + 2 * var(--section-padding-x)
		);
	}

    .logo-link {
        font-weight: 700;
        font-size: 1.2rem;
        color: var(--text-primary);
        text-decoration: none;
        cursor: default;
        z-index: 10;
    }

    #menu-toggle {
        display: none;
        background: none;
        border: none;
        padding: 8px;
        cursor: pointer;
        z-index: 1010;
        color: var(--text-primary);
    }
    #menu-toggle .icon-close { display: none; }
    #menu-toggle[aria-expanded="true"] .icon-menu { display: none; } 
    #menu-toggle[aria-expanded="true"] .icon-close { display: block; }

	#nav-list {
		list-style: none;
		padding: 0;
		margin: 0;
		display: flex;
		align-items: center;
		gap: 20px;
	}

	li {
		margin: 0;
	}

	#nav-list a {
		color: var(--text-secondary);
		text-decoration: none;
		font-weight: 500;
		padding: 5px 0;
		position: relative;
		transition: color 0.2s ease;
		display: block;
	}

	#nav-list a::after {
		content: '';
		position: absolute;
		bottom: -2px;
		left: 0;
		width: 0;
		height: 2px;
		background: var(--accent-gradient);
		transition: width 0.3s ease;
	}

	#nav-list a:hover,
	#nav-list a.active {
		color: var(--text-primary);
	}

	#nav-list a:hover::after,
	#nav-list a.active::after {
		width: 100%;
	}

	@media (max-width: 850px) { 
        #menu-toggle {
            display: block;
        }

        #nav-list {
            display: none;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            padding-top: var(--header-height);
            padding-left: var(--section-padding-x);
            padding-right: var(--section-padding-x);
            padding-bottom: 20px;
            background-color: rgba(255, 255, 255, 0.98);
            backdrop-filter: blur(8px);
            flex-direction: column;
            align-items: flex-start;
            gap: 0;
            overflow-y: auto;
            z-index: 1005;
        }

        #nav-list.is-open {
            display: flex;
        }

        #nav-list li {
            width: 100%;
            border-bottom: 1px solid #eee;
        }
        #nav-list li:last-child {
            border-bottom: none;
        }

        #nav-list a {
            padding: 15px 5px;
            width: 100%;
            font-size: 1.1rem;
        }
        #nav-list a::after {
             display: none;
        }
        #nav-list a.active {
            color: var(--accent-primary);
            font-weight: 700;
        }
	}
</style>
